#ifndef HEXGUI_G
#define HEXGUI_G

/**
@file
Subclass of HexGUI, which is generated by wxFormBuilder.
*/

#include "hexGUI_wxFB.h"
#include "hexGUI_global.hpp"
#include "hexGUI_db.hpp"
#include "hexDB_main.hpp"

class G : public HexGUI
{
	protected:
		/** Handlers for HexGUI events. */
		void HexGUI_TB_OnToolExec( wxCommandEvent& event );
		void HexList_LB_OnSelect( wxCommandEvent& event );
	public:
		G( wxWindow* parent );
		~G( void );
		void ClearTmps( Text path );
		/** Internal Stuff */
		enum
		{
			HEX_LIST_SESSION = 0,
			HEX_LIST_ORG,
			HEX_LIST_PFM,
			HEX_LIST_BIN,
			HEX_LIST_APPS,
			HEX_LIST_FIND,
			HEX_LIST_OUT,
			HEX_LIST_PFL,
			HEX_LIST_HCK,
			HEX_LIST_COUNT
		};
		Text m_sep;
		bool m_ListCfg;
		TxtA m_ListCfgNames;
		bool m_ListCwd;
		int m_ListNow;
		int m_ListOld;
		Vect< wxPanel* >m_List_Ps;
		int m_Org;
		int m_Pfm;
		int m_Bin;
		int m_Pfl;
		int m_Hck;
		int m_Cde;
		Org m_org;
		Pfm m_pfm;
		Bin m_bin;
		Pfl m_pfl;
		Hack m_hck;
		Text m_hexPath;
		Text m_orgPath;
		Text m_iniCfgPath;
		Text m_iniOrgPath;
		Text m_iniThemePath;
		void UpdatePanels( void );
		void UpdateTheme( Text name = wxT("") );
		bool UpdatePflT( TxtF& now, TxtF& old, Text& path );
		bool UpdateHckT( TxtF& now, TxtF& old, Text& path );
		bool Search( HANDLE& hApp, wxFile& hBin );
		bool Read( HANDLE& hApp, wxFile& hBin );
		bool Read( HANDLE& hApp, wxFile& hBin, wxTextCtrl* oText );
		bool ListTabs( void );
		// Shared DB Functions
		bool CheckFilesT( Text& path, Text& leaf, int inMode = -1 );
		bool CheckFilesT( Text& path, Text& leaf, Text& subP, int inMode = -1 );
		bool CheckDirs( Text& path, Text& leaf, int inMode = -1 );
		void LoadData( int inMode = -1 );
		void ListData( int s = 0, int inMode = -1 );
		void SaveData( int inMode = -1 );
		/** Organisations */
		void LoadOrgs( OrgV& dat, TxtF& file, bool isTmpFile = true );
		void SaveOrgs( OrgV& dat, TxtF& file, TxtF& temp, bool isTmpFile = true );
		void ListOrgs( OrgV& dat );
		int  FindOrgI( OrgV& dat, Text& name );
		void ShowOrgD( Org*  obj );
		/** Platforms */
		void LoadPfms( PfmV& dat, TxtF& file, bool isTmpFile = true );
		void SavePfms( PfmV& dat, TxtF& file, bool isTmpFile = true );
		void ListPfms( PfmV& dat );
		int  FindPfmI( PfmV& dat, Text& name );
		void ShowPfmD( Pfm&  obj );
		/** Binarys ( Applications / Files ) */
		void LoadBins( BinV& dat, TxtF& file, bool isTmpFile = true );
		void SaveBins( BinV& dat, TxtF& file, TxtF& temp, bool isTmpFile = true );
		void ListBins( BinV& dat );
		void ShowBinD( Bin&  obj );
		void ShowRamD( Ram&  obj );
		void ListApps( void );
		/** Profiles ( Hacklists ) */
		void LoadPfls( PflV& dat, TxtF& file, bool isTmpFile = true );
		void SavePfls( PflV& dat, TxtF& file, TxtF& temp, bool isTmpFile = true );
		void ListPfls( PflV& dat );
		void ShowPflD( Pfl&  obj );
		/** Hacklist */
		void ListHcks( HckV& dat );
		void ShowHack( Hack& obj );
		void ShowCode( Code& obj );
};

#endif
