#ifndef HEXGUI_G
#define HEXGUI_G

/**
@file
Subclass of HexGUI, which is generated by wxFormBuilder.
*/

#include "hexGUI_wxFB.h"
#include "hexGUI_global.hpp"
#include "hexGUI_db.hpp"
#include "hexDB_main.hpp"

enum
{
	HEX_LOAD_SAVE2FILE = 0,
	HEX_LOAD_SAVE2TEMP,
	HEX_LOAD_LIST,
	HEX_LOAD_COUNT
};
enum
{
	HEX_LIST_SESSION = 0,
	HEX_LIST_ORG,
	HEX_LIST_PFM,
	HEX_LIST_BIN,
	HEX_LIST_RAM,
	HEX_LIST_PFL,
	HEX_LIST_HACK,
	HEX_LIST_CODE,
	HEX_LIST_FIND,
	HEX_LIST_OUT,
	HEX_LIST_EDIT,
	HEX_LIST_COUNT
};

class G : public HexGUI
{
	protected:
		/** Handlers for HexGUI events. */
		void HexGUI_TB_OnToolExec( wxCommandEvent& event );
		void HexList_LB_OnSelect( wxCommandEvent& event );
	public:
		G( wxWindow* parent );
		~G( void );
		void ClearTmps( Text path );
		/** Internal Stuff */
		Text m_sep;
		bool m_ListCfg;
		TxtA m_ListCfgNames;
		bool m_ListCwd;
		int m_ListNow;
		int m_ListOld;
		int m_ListEnd;
		TxtA dataName, dataNow, dataOld;
		Vect< wxPanel* >m_List_Ps;
		int m_Pfl;
		int m_Hck;
		int m_Cde;
		Org m_org;
		Pfm m_pfm;
		Bin m_bin;
		Pfl m_pfl;
		Hack m_hck;
		Text m_hexPath;
		Text m_orgPath;
		Text m_iniCfgPath;
		Text m_iniOrgPath;
		Text m_iniThemePath;
		void UpdatePanels( void );
		void UpdateTheme( Text name = wxT("") );
		bool UpdatePflT( TxtF& now, TxtF& old, Text& path );
		bool UpdateHckT( TxtF& now, TxtF& old, Text& path );
		bool Search( HANDLE& hApp, wxFile& hBin );
		bool Read( HANDLE& hApp, wxFile& hBin );
		bool Read( HANDLE& hApp, wxFile& hBin, wxTextCtrl* oText );
		bool ListTabs( void );
		// Shared DB Functions
		bool CheckFilesT( Text& path, Text& leaf, Text& subP, int inMode = -1 );
		bool CheckDirs( Text& path, Text& leaf, int inMode = -1 );
		bool LoadData( TxtA& data, TxtF& file, TxtF& temp, Text& nowP, Text& tmpP, int& inMode, Text& name, bool isFileTmp = false, bool isTempTmp = true );
		void LoadData( int doAct = HEX_LOAD_SAVE2TEMP, int inMode = -1, Text name = _("Default") );
		/** Organisations */
		Org  LoadOrgs( Org& obj, TxtF& file, TxtF& temp, TxtA& data, Text name, bool isFileTmp = false, bool isTempTmp = true );
		void LoadOrgD( Org& obj, TxtF& file, bool isTmpFile = true );
		void SaveOrgD( Org& obj, TxtF& file, bool isTmpFile = true );
		void ShowOrgD( Org* obj );
		/** Platforms */
		Pfm  LoadPfms( Pfm& obj, TxtF& file, TxtF& temp, TxtA& data, Text name, bool isFileTmp = false, bool isTempTmp = true );
		void LoadPfmD( Pfm& obj, TxtF& file, bool isTmpFile = true );
		void SavePfmD( Pfm& obj, TxtF& file, bool isTmpFile = true );
		void ShowPfmD( Pfm& obj );
		/** Binaries ( Applications / Files ) */
		Bin  LoadBins( Bin& obj, TxtF& file, TxtF& temp, TxtA& data, Text name, bool isFileTmp = false, bool isTempTmp = true );
		void LoadBinD( Bin& obj, TxtF& file, bool isTmpFile = true );
		void SaveBinD( Bin& obj, TxtF& file, bool isTmpFile = true );
		void ShowBinD( Bin& obj );
		void ShowRamD( Ram& obj );
		void ListApps( void );
		/** Profiles ( Hacklists ) */
		ui32 CheckRegion( Text region );
		Text CheckRegion( ui32 region );
		Pfl  LoadPfls( Pfl& obj, TxtF& file, TxtF& temp, TxtA& data, Text name, bool isFileTmp = false, bool isTempTmp = true );
		void LoadPflD( Pfl& obj, TxtF& file, bool isTmpFile = true );
		void SavePflD( Pfl& obj, TxtF& file, bool isTmpFile = true );
		void ShowPflD( Pfl& obj );
		/** Hacklist */
		void ListHcks( HckV& dat );
		void ShowHack( Hack& obj );
		void ShowCode( Code& obj );
};

#endif
